{"version":3,"sources":["components/RemoteCanvas/RemoteCanvas.module.scss","components/PaintBoard/ToolBoard/ToolBoard.module.scss","page/Room/Room.module.scss","components/PaintBoard/Palette/Palette.module.scss","page/TopPage/TopPage.module.scss","components/RoomHeader/RoomHeader.module.scss","components/CenteredContainer/CenteredContainer.module.scss","components/PaintBoard/CommandBoard/CommandBoard.module.scss","components/Tooltip/Tooltip.module.scss","components/PaintBoard/CommandBoard/LongTapRemoveIcon.module.scss","components/PaintBoard/PaintBoard.module.scss","components/FixedCanvas/FixedCanvas.module.scss","components/FancyButton/FancyButton.module.scss","reportWebVitals.ts","page/TopPage/TopPage.tsx","components/Tooltip/Tooltip.tsx","components/RoomHeader/RoomHeader.tsx","components/CenteredContainer/CenteredContainer.tsx","hooks/useMutableCallback.ts","hooks/useTrigger.ts","components/FixedCanvas/FixedCanvas.tsx","components/DrawableCanvas/DrawableCanvas.tsx","lib/Stroke.ts","components/PaintBoard/Palette/Palette.tsx","lib/RoomService/context.ts","hooks/createCtx.ts","components/PaintBoard/ToolBoard/ToolBoard.tsx","components/PaintBoard/CommandBoard/LongTapRemoveIcon.tsx","components/PaintBoard/CommandBoard/CommandBoard.tsx","components/PaintBoard/PaintBoard.tsx","components/RemoteCanvas/RemoteCanvas.tsx","components/FancyButton/FancyButton.tsx","components/RoomJoin/RoomJoin.tsx","lib/RoomService/useBroadcast.ts","lib/RoomService/RoomService.tsx","lib/RoomService/useCreateRoom.ts","lib/RoomService/useJoinRoom.ts","lib/RoomService/connection.ts","config.ts","page/Room/Room.tsx","router.tsx","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","TopPage","useState","name","setName","useCookies","setCookie","roomId","setRoomId","onClick","useCallback","a","length","Math","random","toString","substring","push","to","pathname","state","mode","className","cls","container","contentWindow","contentBody","type","placeholder","onChange","e","target","value","button","github","href","icon","faGithub","Tooltip","fn","text","onShow","onHide","children","tooltip","onMouseEnter","onMouseLeave","setTimeout","tooltipText","RoomHeader","setColumnMode","copied","setCopied","header","window","location","onCopy","faClipboard","copyIcon","modeIcons","faFlipboard","faThLarge","faTh","CenteredContainer","useMutableCallback","callback","ref","useRef","current","createTrigger","subscribers","Object","assign","forEach","subscriber","counter","subscribe","f","unsubscribe","filter","useTriggerEffect","trigger","triggerValue","setCounter","fire","useEffect","useTrigger","FixedCanvas","forwardRef","props","style","width","height","clsx","canvas","undoTrigger","clearTrigger","DrawableCanvas","strokeStyle","initialStrokeList","onStroke","onUndo","onClear","canvasRef","strokeList","setStrokeList","initialized","setInitialized","refleshCanvas","currentStroke","context","getContext","fillStyle","fillRect","stroke","color","code","lineJoin","lineWidth","brush","i","path","beginPath","moveTo","x","y","lineTo","closePath","undo","pop","clear","drawing","leaveInDrawing","lastPoint","undefined","startDraw","event","preventDefault","stopDraw","coordinate","getCoordinate","doDrawing","drawLine","enterDraw","leaveDraw","keydown","key","ctrlKey","metaKey","startPoint","endPoint","offsetX","offsetY","addEventListener","document","removeEventListener","tabIndex","UsableBrushes","UsableColors","DEFAULT_STROKE_STYLE","strokeCommandToStrokeList","strokeCommands","sc","command","stringifyStrokeCommand","strokeCommand","map","p","join","Error","parseStrokeCommand","data","split","shift","find","b","c","splice","coords","parseInt","Palette","changePalette","palette","setPalette","changeColor","foundColor","newPalette","changeBrush","foundBrush","paletteContainer","colorPalette","backgroundColor","currentColor","faPaintBrush","brushPalette","ctx","createContext","useContext","Provider","createCtx","useRoomContext","RoomContextProvider","ToolBoard","roomState","id","users","sendChangeVisibility","sendChangeEyeClosed","myData","u","visible","setVisible","eyeClosed","setEyeClosed","toggleHideCanvas","toggleEyeClosed","visibleIcon","faBed","active","inactive","faEye","faEyeSlash","LongTapRemoveIcon","onLongTap","charged","setCharged","timerID","setTimerID","reset","clearTimeout","longTapIcon","smoothIcon","onMouseDown","onMouseUp","CommandBoard","onCommand","commandBoard","faUndo","commandIcon","PaintBoard","sendStroke","sendClear","setStrokeStyle","user","paintBoard","tools","RemoteCanvas","userName","connected","grayout","overlay","overlayActive","faFileSignature","hide","disconnected","faUserSlash","FancyButton","RoomJoin","onJoinButtonClicked","nickname","setNickname","AppConn","socketteRef","commandType","payload","this","json","message","useRoomService","roomJoined","role","setRoomState","conn","appConn","setConnected","error","setError","deps","promiseRef","createRoom","sendCommand","Promise","resolve","reject","recvRoomCreated","convertRawUserDataToUserData","recvRoomAlreadyUsed","useCreateRoom","joinRoom","recvRoomJoined","recvNicknameAlreadyUsed","recvRoomNotFound","recvUserJoined","rest","userData","recvUserDisconnected","useJoinRoom","recvDraw","recvClear","recvChangeVisibility","recvChangeEyeClosed","recvBroadcastMessage","useBroadcast","onReceiveMessage","sockette","onOpen","onClose","onError","Sockette","timeout","maxAttempts","onmessage","JSON","parse","onopen","onclose","onerror","newConnection","console","close","rawUserData","Room","match","params","cookies","nicknameInput","setNicknameInput","columnMode","errorMessage","setErrorMessage","roomService","others","remoteCanvasScale","remoteCanvasWidth","remoteCanvasHeight","paintBoardWrapperClassName","pb_draw","pb_ThLarge","pb_Th","canvasAlignment","paintBoardWrapper","remoteCanvas","PathDefs","routes","basename","process","exact","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1ae8fa1c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"RemoteCanvas_container__27ACe\",\"userName\":\"RemoteCanvas_userName__11y6s\",\"overlay\":\"RemoteCanvas_overlay__1kjal\",\"overlayActive\":\"RemoteCanvas_overlayActive__3My-c\",\"disconnected\":\"RemoteCanvas_disconnected__2Hxhu\",\"hide\":\"RemoteCanvas_hide__2PV2j\",\"eyeClosed\":\"RemoteCanvas_eyeClosed__1JTOJ\",\"grayout\":\"RemoteCanvas_grayout__2NdEP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ToolBoard_container__2fxiY\",\"visibleIcon\":\"ToolBoard_visibleIcon__1n3-N\",\"active\":\"ToolBoard_active__3DA4J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvasAlignment\":\"Room_canvasAlignment__1O8SY\",\"paintBoardWrapper\":\"Room_paintBoardWrapper__16REK\",\"paintBoard\":\"Room_paintBoard__1NBrS\",\"pb_draw\":\"Room_pb_draw__3aeOx\",\"pb_ThLarge\":\"Room_pb_ThLarge__32T2V\",\"pb_Th\":\"Room_pb_Th__3va4_\",\"remoteCanvas\":\"Room_remoteCanvas__2-lrq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paletteContainer\":\"Palette_paletteContainer__15gzz\",\"colorPalette\":\"Palette_colorPalette__2si7l\",\"currentColor\":\"Palette_currentColor__18fZI\",\"brushPalette\":\"Palette_brushPalette___-9o7\",\"brush-thin\":\"Palette_brush-thin__1LUlB\",\"brush-normal\":\"Palette_brush-normal__EY6CG\",\"brush-bold\":\"Palette_brush-bold__UaOUf\",\"brush-large\":\"Palette_brush-large__1-eVr\",\"current\":\"Palette_current__2dY0p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TopPage_container__2V69X\",\"contentWindow\":\"TopPage_contentWindow__1SkQC\",\"contentBody\":\"TopPage_contentBody__3qUK4\",\"button\":\"TopPage_button__1tRTt\",\"github\":\"TopPage_github__1ICff\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"RoomHeader_header__2lyGX\",\"roomId\":\"RoomHeader_roomId__2-CxS\",\"copyIcon\":\"RoomHeader_copyIcon__13CgJ\",\"modeIcons\":\"RoomHeader_modeIcons__2hnMQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CenteredContainer_container__3R0Hk\",\"contentWindow\":\"CenteredContainer_contentWindow__14df9\",\"contentBody\":\"CenteredContainer_contentBody__1L9Yc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"commandBoard\":\"CommandBoard_commandBoard__1duD2\",\"commandIcon\":\"CommandBoard_commandIcon__3n6_y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"Tooltip_tooltip__1K7qB\",\"tooltipText\":\"Tooltip_tooltipText__OgMCb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"longTapIcon\":\"LongTapRemoveIcon_longTapIcon__3klTB\",\"smoothIcon\":\"LongTapRemoveIcon_smoothIcon__2WjEN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paintBoard\":\"PaintBoard_paintBoard__hAH3U\",\"tools\":\"PaintBoard_tools__3tTQ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"FixedCanvas_canvas__1pzjM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FancyButton_button__v6Va5\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/** @format */\n\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useState } from \"react\";\nimport { useCallback } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport { Redirect } from \"react-router-dom\";\nimport cls from \"./TopPage.module.scss\";\n\n/**\n * ルーム作成ページ\n */\nconst TopPage = () => {\n  const [name, setName] = useState(\"\");\n  const [, setCookie] = useCookies([\"nickname\"]);\n  const [roomId, setRoomId] = useState<string>();\n  const onClick = useCallback(async () => {\n    if (name.length > 0) {\n      // ルームIDはとりあえず適当なものを作成\n      setRoomId(Math.random().toString(32).substring(2));\n      setCookie(\"nickname\", name);\n    }\n  }, [name, setCookie]);\n\n  if (roomId) {\n    return <Redirect push to={{ pathname: `/room/${roomId}`, state: { mode: \"createRoom\" } }} />;\n  }\n\n  return (\n    <div className={cls.container}>\n      <div className={cls.contentWindow}>\n        <main className={cls.contentBody}>\n          <p>フリップボードを使ってみよう</p>\n          <div>\n            <input type=\"text\" placeholder=\"ニックネーム\" onChange={(e) => setName(e.target.value)} />\n          </div>\n          <div>\n            <button className={cls.button} onClick={onClick}>\n              ルームを作成する\n            </button>\n          </div>\n          <div className={cls.github}>\n            <a href=\"https://github.com/wiro34/kak\">\n              <FontAwesomeIcon icon={faGithub} />\n            </a>\n          </div>\n        </main>\n      </div>\n      <footer></footer>\n    </div>\n  );\n};\n\nexport default TopPage;\n","/** @format */\n\nimport React from \"react\";\nimport cls from \"./Tooltip.module.scss\";\n\ntype Props = {\n  /** ツールチップテキスト */\n  text: string;\n  onShow?: () => void;\n  onHide?: () => void;\n  children?: React.ReactNode;\n};\n\n/**\n * カーソルを重ねたときに表示するツールチップ\n */\nconst Tooltip = ({ text, onShow, onHide, children }: Props) => {\n  const waitAnimation = (fn?: () => void) => {\n    if (fn) {\n      return () => {\n        // ツールチップが消えるまで遅延\n        setTimeout(fn, 300);\n      };\n    }\n    return fn;\n  };\n  return (\n    <span className={cls.tooltip} onMouseEnter={onShow} onMouseLeave={waitAnimation(onHide)}>\n      <span className={cls.tooltipText}>{text}</span>\n      {children}\n    </span>\n  );\n};\n\nexport default Tooltip;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { faClipboard } from \"@fortawesome/free-regular-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport Tooltip from \"../Tooltip/Tooltip\";\nimport cls from \"./RoomHeader.module.scss\";\nimport { faTh, faThLarge } from \"@fortawesome/free-solid-svg-icons\";\nimport { faFlipboard } from \"@fortawesome/free-brands-svg-icons\";\n\ntype Props = {\n  roomId: string;\n  setColumnMode: (mode: \"draw\" | \"th\" | \"th-large\") => void;\n};\n\n/**\n * ルームページのヘッダ\n */\nconst RoomHeader = function ({ roomId, setColumnMode }: Props) {\n  const [copied, setCopied] = useState(false);\n  return (\n    <header className={cls.header}>\n      <div className={cls.roomId}>\n        <h2>ルームID: {roomId}</h2>\n\n        <Tooltip text={copied ? \"コピーしました\" : \"ルームへの招待リンクをコピーする\"} onHide={() => setCopied(false)}>\n          <CopyToClipboard text={window.location.href} onCopy={() => setCopied(true)}>\n            <FontAwesomeIcon icon={faClipboard} className={cls.copyIcon} />\n          </CopyToClipboard>\n        </Tooltip>\n      </div>\n      <div className={cls.modeIcons}>\n        <Tooltip text=\"自分のフリップボードを拡大表示\">\n          <FontAwesomeIcon icon={faFlipboard} onClick={() => setColumnMode(\"draw\")} />\n        </Tooltip>\n        <Tooltip text=\"ボードを並べて表示（大）\">\n          <FontAwesomeIcon icon={faThLarge} onClick={() => setColumnMode(\"th-large\")} />\n        </Tooltip>\n        <Tooltip text=\"ボードを並べて表示（小）\">\n          <FontAwesomeIcon icon={faTh} onClick={() => setColumnMode(\"th\")} />\n        </Tooltip>\n      </div>\n    </header>\n  );\n};\n\nexport default RoomHeader;\n","/** @format */\n\nimport React from \"react\";\nimport cls from \"./CenteredContainer.module.scss\";\n\ntype Props = {\n  children: React.ReactNode;\n};\n\n/**\n * ルーム作成など画面中央に表示するためのコンテナコンポーネント\n */\nconst CenteredContainer = ({ children }: Props) => {\n  return (\n    <div className={cls.container}>\n      <div className={cls.contentWindow}>\n        <div className={cls.contentBody}>{children}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default CenteredContainer;\n","/** @format */\n\nimport { useRef } from \"react\";\n\n/**\n * 非同期で呼ばれるコールバックを定義するフック\n *\n * クロージャで束縛されている変数が更新されない問題を解決する\n */\nexport function useMutableCallback<T extends (...args: any) => any>(callback: T) {\n  const ref = useRef(callback);\n  ref.current = callback;\n  return (...args: Parameters<T>): ReturnType<T> => ref.current && ref.current(...args);\n}\n","/** @format */\n\nimport { useEffect, useState } from \"react\";\nimport { useMutableCallback } from \"./useMutableCallback\";\n\ntype TriggerFunction = () => void;\n\ntype Trigger = {\n  (): void;\n  counter: number;\n  subscribe: (f: TriggerFunction) => void;\n  unsubscribe: (f: TriggerFunction) => void;\n};\n\n/**\n * コンポーネントを外部から操作するためのトリガを作成します\n */\nexport function createTrigger(): Trigger {\n  let subscribers: TriggerFunction[] = [];\n\n  const trigger = () => {\n    subscribers.forEach((subscriber) => subscriber());\n  };\n\n  return Object.assign(trigger, {\n    counter: 0,\n    subscribe: (f: TriggerFunction) => {\n      subscribers.push(f);\n    },\n    unsubscribe: (f: TriggerFunction) => {\n      subscribers = subscribers.filter((fn) => fn !== f);\n    },\n  });\n}\n\n/**\n * トリガの参照を取得する\n */\nexport default function useTrigger(trigger: Trigger) {\n  const [counter, setCounter] = useState(trigger.counter);\n\n  const fire = useMutableCallback(() => {\n    trigger.counter = counter + 1;\n    setCounter(counter + 1);\n  });\n\n  useEffect(function () {\n    trigger.subscribe(fire);\n    return function () {\n      return trigger.unsubscribe(fire);\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  return counter;\n}\n\n/**\n * トリガが発火したときのコールバックを設定します\n */\nexport function useTriggerEffect(callback: () => void, trigger: Trigger) {\n  const triggerValue = useTrigger(trigger);\n\n  useEffect(() => {\n    // Do not run on mount\n    if (triggerValue > 0) {\n      callback();\n    }\n    // eslint-disable-next-line\n  }, [triggerValue]);\n}\n","/** @format */\n\nimport React, { forwardRef, ForwardRefExoticComponent, PropsWithRef } from \"react\";\nimport clsx from \"clsx\";\nimport cls from \"./FixedCanvas.module.scss\";\n\nexport type ElementFrec<T extends keyof JSX.IntrinsicElements> = ForwardRefExoticComponent<\n  PropsWithRef<JSX.IntrinsicElements[T]>\n>;\n\n/**\n * canvas 要素を含む div 要素はなぜか高さが微妙にずれる ( chrome だけ？ ) ので\n * 高さを調整したコンポーネントとして定義\n */\nconst FixedCanvas: ElementFrec<\"canvas\"> = forwardRef((props, ref) => {\n  return (\n    <div style={{ width: `${props.width}px`, height: `${props.height}px` }}>\n      <canvas {...props} width=\"640\" height=\"480\" ref={ref} className={clsx(props.className, cls.canvas)} />\n    </div>\n  );\n});\n\nexport default FixedCanvas;\n","/** @format */\n\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { createTrigger, useTriggerEffect } from \"../../hooks/useTrigger\";\nimport { Coordinate, Stroke, StrokeStyle } from \"../../lib/Stroke\";\nimport FixedCanvas from \"../FixedCanvas/FixedCanvas\";\n\n/**\n * DrawableCanvas コンポーネント外から Undo を実行するためのトリガ\n */\nexport const undoTrigger = createTrigger();\n\n/**\n * DrawableCanvas コンポーネント外から Clear を実行するためのトリガ\n */\nexport const clearTrigger = createTrigger();\n\ntype Props = {\n  width: number;\n  height: number;\n  strokeStyle: StrokeStyle;\n  initialStrokeList: Stroke[];\n  onStroke?: (stroke: Stroke) => void;\n  onUndo?: () => void;\n  onClear?: () => void;\n};\n\n/**\n * 描き込みできる Canvas\n */\nconst DrawableCanvas = function ({ width, height, strokeStyle, initialStrokeList, onStroke, onUndo, onClear }: Props) {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [strokeList, setStrokeList] = useState<Stroke[]>(initialStrokeList);\n  const [initialized, setInitialized] = useState(false);\n\n  const refleshCanvas = useCallback(\n    (strokeList: Stroke[], currentStroke?: Stroke) => {\n      if (!canvasRef.current) {\n        return;\n      }\n      const canvas: HTMLCanvasElement = canvasRef.current;\n      const context = canvas.getContext(\"2d\");\n      if (!context) {\n        return;\n      }\n\n      context.fillStyle = \"#ffffff\";\n      context.fillRect(0, 0, canvas.width, canvas.height);\n\n      [...strokeList, currentStroke].forEach((stroke) => {\n        if (!stroke) {\n          return;\n        }\n        context.strokeStyle = stroke.style.color.code;\n        context.lineJoin = \"round\";\n        context.lineWidth = stroke.style.brush.width;\n\n        for (let i = 1; i < stroke.path.length; i++) {\n          context.beginPath();\n          context.moveTo(stroke.path[i - 1].x, stroke.path[i - 1].y);\n          context.lineTo(stroke.path[i].x, stroke.path[i].y);\n          context.closePath();\n          context.stroke();\n        }\n      });\n    },\n    [canvasRef]\n  );\n\n  const undo = useCallback(() => {\n    if (strokeList.length === 0) {\n      return;\n    }\n    strokeList.pop();\n    setStrokeList(strokeList);\n    if (onUndo) {\n      onUndo();\n    }\n    refleshCanvas(strokeList);\n  }, [onUndo, strokeList, setStrokeList, refleshCanvas]);\n\n  const clear = useCallback(() => {\n    if (strokeList.length === 0) {\n      return;\n    }\n    setStrokeList([]);\n    if (onClear) {\n      onClear();\n    }\n    refleshCanvas([]);\n  }, [onClear, strokeList, setStrokeList, refleshCanvas]);\n\n  useEffect(() => {\n    if (!canvasRef.current) {\n      return;\n    }\n\n    // 負荷削減のため状態保存に state ではなく素の変数を使用する\n    let drawing = false;\n    let leaveInDrawing = false;\n    let lastPoint: Coordinate | undefined = undefined;\n    let stroke: Stroke | undefined = undefined;\n\n    const startDraw = (event: MouseEvent) => {\n      event.preventDefault();\n      if (drawing) {\n        stopDraw(event);\n      }\n      const coordinate = getCoordinate(event);\n      drawing = true;\n      lastPoint = coordinate;\n      stroke = { style: strokeStyle, path: [coordinate] };\n    };\n    const stopDraw = (event: MouseEvent) => {\n      event.preventDefault();\n      if (stroke) {\n        setStrokeList([...strokeList, stroke]);\n        if (onStroke) {\n          onStroke(stroke);\n        }\n        stroke = undefined;\n      }\n      drawing = false;\n    };\n\n    const doDrawing = (event: MouseEvent) => {\n      event.preventDefault();\n      if (drawing) {\n        const coordinate = getCoordinate(event);\n        if (lastPoint) {\n          if (stroke) {\n            stroke.path.push(coordinate);\n          }\n          drawLine(strokeStyle, lastPoint, coordinate);\n        }\n        lastPoint = coordinate;\n      }\n    };\n\n    const enterDraw = (event: MouseEvent) => {\n      if (leaveInDrawing) {\n        lastPoint = getCoordinate(event);\n        if (stroke) {\n          stroke.path.push(lastPoint);\n        }\n        drawing = true;\n        leaveInDrawing = false;\n      }\n    };\n    const leaveDraw = (event: MouseEvent) => {\n      if (drawing) {\n        lastPoint = getCoordinate(event);\n        if (stroke) {\n          stroke.path.push(lastPoint);\n        }\n        leaveInDrawing = true;\n        drawing = false;\n      }\n    };\n\n    const keydown = (event: KeyboardEvent) => {\n      if (event.key === \"z\" && (event.ctrlKey || event.metaKey)) {\n        undo();\n      }\n    };\n\n    const drawLine = (strokeStyle: StrokeStyle, startPoint: Coordinate, endPoint: Coordinate) => {\n      if (!canvasRef.current) {\n        return;\n      }\n      const canvas: HTMLCanvasElement = canvasRef.current;\n      const context = canvas.getContext(\"2d\");\n      if (!context) {\n        return;\n      }\n\n      context.strokeStyle = strokeStyle.color.code;\n      context.lineJoin = \"round\";\n      context.lineWidth = strokeStyle.brush.width;\n\n      context.beginPath();\n      context.moveTo(startPoint.x, startPoint.y);\n      context.lineTo(endPoint.x, endPoint.y);\n      context.closePath();\n      context.stroke();\n    };\n\n    const getCoordinate = (event: MouseEvent): Coordinate => {\n      return {\n        x: event.offsetX,\n        y: event.offsetY,\n      };\n    };\n\n    const canvas: HTMLCanvasElement = canvasRef.current;\n\n    if (!initialized) {\n      refleshCanvas(strokeList);\n      setInitialized(true);\n    }\n\n    canvas.addEventListener(\"mousedown\", startDraw);\n    canvas.addEventListener(\"mousemove\", doDrawing);\n    canvas.addEventListener(\"mouseup\", stopDraw);\n    canvas.addEventListener(\"mouseenter\", enterDraw);\n    canvas.addEventListener(\"mouseleave\", leaveDraw);\n    canvas.addEventListener(\"keydown\", keydown);\n    document.addEventListener(\"mouseup\", stopDraw);\n    return () => {\n      canvas.removeEventListener(\"mousedown\", startDraw);\n      canvas.removeEventListener(\"mousemove\", doDrawing);\n      canvas.removeEventListener(\"mouseup\", stopDraw);\n      canvas.removeEventListener(\"mouseenter\", enterDraw);\n      canvas.removeEventListener(\"mouseleave\", leaveDraw);\n      canvas.removeEventListener(\"keydown\", keydown);\n      document.removeEventListener(\"mouseup\", stopDraw);\n    };\n  }, [onStroke, onUndo, strokeList, setStrokeList, strokeStyle, undo, refleshCanvas, initialized, setInitialized]);\n\n  useTriggerEffect(() => {\n    undo();\n  }, undoTrigger);\n\n  useTriggerEffect(() => {\n    clear();\n  }, clearTrigger);\n\n  return <FixedCanvas tabIndex={1} width={width} height={height} ref={canvasRef} />;\n};\n\nexport default DrawableCanvas;\n","/** @format */\n\nexport type Stroke = {\n  style: StrokeStyle;\n  path: Coordinate[];\n};\n\nexport type StrokeCommand = { command: \"draw\"; stroke: Stroke } | { command: \"undo\" };\n\nexport type Coordinate = {\n  x: number;\n  y: number;\n};\n\nexport type StrokeStyle = {\n  color: Color;\n  brush: Brush;\n};\n\nexport type Color = {\n  name: string;\n  code: string;\n};\n\nexport type Brush = {\n  name: string;\n  width: number;\n};\n\nexport const UsableBrushes = [\n  { name: \"thin\", width: 2 },\n  { name: \"normal\", width: 6 },\n  { name: \"bold\", width: 10 },\n  { name: \"large\", width: 20 },\n];\n\nexport const UsableColors: Color[] = [\n  { name: \"Bl\", code: \"#000000\" },\n  { name: \"Gy\", code: \"#aaaaaa\" },\n  { name: \"Wh\", code: \"#ffffff\" },\n  { name: \"Br\", code: \"#03a9f4\" },\n  { name: \"Gr\", code: \"#4caf50\" },\n  { name: \"Nv\", code: \"#3f51b5\" },\n  { name: \"Bw\", code: \"#795548\" },\n  { name: \"Or\", code: \"#ff9800\" },\n  { name: \"Rd\", code: \"#e91e63\" },\n  { name: \"Yw\", code: \"#fbe100\" },\n  { name: \"Bg\", code: \"#ffd8c5\" },\n  { name: \"Pp\", code: \"#9c27b0\" },\n];\n\nexport const DEFAULT_STROKE_STYLE: StrokeStyle = {\n  color: UsableColors[0],\n  brush: UsableBrushes[0],\n};\n\n/**\n * StrokeCommand のリストから Stroke のリストに変換します\n */\nexport function strokeCommandToStrokeList(strokeCommands: StrokeCommand[]): Stroke[] {\n  let strokeList: Stroke[] = [];\n  strokeCommands.forEach((sc) => {\n    switch (sc.command) {\n      case \"draw\":\n        strokeList.push(sc.stroke);\n        break;\n      case \"undo\":\n        strokeList.pop();\n        break;\n    }\n  });\n  return strokeList;\n}\n\n/**\n * StrokeCommand を文字列表記にエンコードします\n */\nexport function stringifyStrokeCommand(strokeCommand: StrokeCommand): string {\n  switch (strokeCommand.command) {\n    case \"draw\":\n      return [\n        \"draw\",\n        strokeCommand.stroke.style.brush.name,\n        strokeCommand.stroke.style.color.name,\n        strokeCommand.stroke.path.map((p) => `${p.x}^${p.y}`).join(\",\"),\n      ].join(\",\");\n    case \"undo\":\n      return \"undo\";\n    default:\n      throw new Error(`Failed to stringify StrokeCommand: command=${(strokeCommand as any).command}`);\n  }\n}\n\n/**\n * StrokeCommand の文字列表記をデコードします\n */\nexport function parseStrokeCommand(stroke: string): StrokeCommand {\n  const data = stroke.split(\",\");\n  const command = data.shift();\n  switch (command) {\n    case \"draw\":\n      const brush = UsableBrushes.find((b) => b.name === data[0]);\n      const color = UsableColors.find((c) => c.name === data[1]);\n      if (!brush || !color) {\n        throw new Error(\"\");\n      }\n      return {\n        command,\n        stroke: {\n          style: {\n            brush,\n            color,\n          },\n          path: data.splice(2).map((p) => {\n            const coords = p.split(\"^\");\n            return {\n              x: parseInt(coords[0], 10),\n              y: parseInt(coords[1], 10),\n            };\n          }),\n        },\n      };\n    case \"undo\":\n      return { command };\n    default:\n      throw new Error(`Failed to parse StrokeCommand: command=${command}`);\n  }\n}\n","/** @format */\n\nimport { faPaintBrush } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport clsx from \"clsx\";\nimport React, { useCallback, useState } from \"react\";\nimport { DEFAULT_STROKE_STYLE, StrokeStyle, UsableBrushes, UsableColors } from \"../../../lib/Stroke\";\nimport cls from \"./Palette.module.scss\";\n\ntype Props = {\n  changePalette: (palette: StrokeStyle) => void;\n};\n\n/**\n * ストロークの色・太さを変更するパレットボード\n */\nconst Palette = function ({ changePalette }: Props) {\n  const [palette, setPalette] = useState<StrokeStyle>(DEFAULT_STROKE_STYLE);\n  const changeColor = useCallback(\n    (name: string) => {\n      const foundColor = UsableColors.find((c) => c.name === name);\n      if (foundColor) {\n        const newPalette = { ...palette, color: foundColor };\n        setPalette(newPalette);\n        changePalette(newPalette);\n      }\n    },\n    [changePalette, setPalette, palette]\n  );\n\n  const changeBrush = useCallback(\n    (brush: string) => {\n      const foundBrush = UsableBrushes.find((b) => b.name === brush);\n      if (foundBrush) {\n        const newPalette = { ...palette, brush: foundBrush };\n        setPalette(newPalette);\n        changePalette(newPalette);\n      }\n    },\n    [changePalette, setPalette, palette]\n  );\n\n  return (\n    <div className={cls.paletteContainer}>\n      <div className={cls.colorPalette}>\n        {UsableColors.map(({ name, code }) => (\n          <span key={name} style={{ backgroundColor: code }} onClick={() => changeColor(name)} />\n        ))}\n        <span className={cls.currentColor} style={{ color: palette.color.code }}>\n          <FontAwesomeIcon icon={faPaintBrush} />\n        </span>\n      </div>\n\n      <div className={cls.brushPalette}>\n        {UsableBrushes.map((brush) => (\n          <span\n            className={clsx({\n              [cls[`brush-${brush.name}`]]: true,\n              [cls.current]: brush.name === palette.brush.name,\n            })}\n            onClick={() => changeBrush(brush.name)}\n            key={brush.name}\n          ></span>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Palette;\n","/** @format */\n\nimport { createCtx } from \"../../hooks/createCtx\";\nimport { RoomServiceResponse } from \"./RoomService\";\n\nexport const [useRoomContext, RoomContextProvider] =\n  createCtx<RoomServiceResponse>();\n","/** @format */\n\nimport { createContext, useContext } from \"react\";\n\nexport function createCtx<ContextType>() {\n  const ctx = createContext<ContextType | undefined>(undefined);\n  function useCtx() {\n    const c = useContext(ctx);\n    if (!c) throw new Error(\"useCtx must be inside a Provider with a value\");\n    return c;\n  }\n  return [useCtx, ctx.Provider] as const;\n}\n","/** @format */\n\nimport React from \"react\";\nimport { faBed, faEye, faEyeSlash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useCallback } from \"react\";\nimport { useState } from \"react\";\nimport Tooltip from \"../../Tooltip/Tooltip\";\nimport { useRoomContext } from \"../../../lib/RoomService/context\";\nimport cls from \"./ToolBoard.module.scss\";\n\n/**\n * キャンバスの状態を変更するツール群ボード\n */\nconst ToolBoard = function () {\n  const {\n    roomState: { id, users },\n    sendChangeVisibility,\n    sendChangeEyeClosed,\n  } = useRoomContext();\n  const myData = users.find((u) => u.id === id);\n  const [visible, setVisible] = useState(myData ? myData.visible : true);\n  const [eyeClosed, setEyeClosed] = useState(myData ? myData.eyeClosed : true);\n\n  const toggleHideCanvas = useCallback(() => {\n    setVisible(!visible);\n    sendChangeVisibility(!visible);\n  }, [visible, setVisible, sendChangeVisibility]);\n\n  const toggleEyeClosed = useCallback(() => {\n    setEyeClosed(!eyeClosed);\n    sendChangeEyeClosed(!eyeClosed);\n  }, [eyeClosed, setEyeClosed, sendChangeEyeClosed]);\n\n  return (\n    <div className={cls.container}>\n      <span onClick={toggleEyeClosed} className={cls.visibleIcon}>\n        <Tooltip text={eyeClosed ? \"起きる（ボードを見る）\" : \"寝る（みんなのボードを見ない）\"}>\n          {eyeClosed ? (\n            <FontAwesomeIcon icon={faBed} className={cls.active} />\n          ) : (\n            <FontAwesomeIcon icon={faBed} className={cls.inactive} />\n          )}\n        </Tooltip>\n      </span>\n      <span onClick={toggleHideCanvas} className={cls.visibleIcon}>\n        <Tooltip text={visible ? \"非公開にする\" : \"公開する\"}>\n          {visible ? (\n            <FontAwesomeIcon icon={faEye} className={cls.inactive} />\n          ) : (\n            <FontAwesomeIcon icon={faEyeSlash} className={cls.active} />\n          )}\n        </Tooltip>\n      </span>\n    </div>\n  );\n};\n\nexport default ToolBoard;\n","/** @format */\n\nimport clsx from \"clsx\";\nimport React, { useState } from \"react\";\nimport cls from \"./LongTapRemoveIcon.module.scss\";\n\ntype Props = {\n  onLongTap: () => void;\n  className?: string;\n};\n\n/**\n * 長押しで発火するゴミ箱アイコン\n */\nconst LongTapRemoveIcon = function ({ className, onLongTap }: Props) {\n  const [charged, setCharged] = useState(false);\n  const [timerID, setTimerID] = useState<NodeJS.Timeout>();\n\n  const onMouseDown = () => {\n    setCharged(false);\n    const id = setTimeout(() => {\n      setCharged(true);\n    }, 500);\n    setTimerID(id);\n  };\n\n  const onMouseUp = () => {\n    if (charged) {\n      onLongTap();\n    }\n    reset();\n  };\n\n  const reset = () => {\n    if (timerID) {\n      clearTimeout(timerID);\n    }\n    setTimerID(undefined);\n  };\n\n  return (\n    // eslint-disable-next-line\n    <a className={clsx(className, cls.longTapIcon)}>\n      <span className={cls.smoothIcon} onMouseDown={onMouseDown} onMouseUp={onMouseUp} onMouseLeave={reset}>\n        <i className=\"fas fa-trash\"></i>\n      </span>\n    </a>\n  );\n};\n\nexport default LongTapRemoveIcon;\n","/** @format */\n\nimport React from \"react\";\nimport { faUndo } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Tooltip from \"../../Tooltip/Tooltip\";\nimport cls from \"./CommandBoard.module.scss\";\nimport LongTapRemoveIcon from \"./LongTapRemoveIcon\";\n\ntype Props = {\n  onCommand: (command: string) => void;\n};\n\n/**\n * 描画関連のコマンドボード\n */\nconst CommandBoard = function ({ onCommand }: Props) {\n  return (\n    <div className={cls.commandBoard}>\n      <span onClick={() => onCommand(\"undo\")}>\n        <Tooltip text=\"元に戻す（Ctrl+Z）\">\n          <FontAwesomeIcon icon={faUndo} className={cls.commandIcon} />\n        </Tooltip>\n      </span>\n      <span>\n        <Tooltip text=\"長押しでキャンバスをクリア（元に戻せません！）\">\n          <LongTapRemoveIcon className={cls.commandIcon} onLongTap={() => onCommand(\"clear\")} />\n        </Tooltip>\n      </span>\n    </div>\n  );\n};\n\nexport default CommandBoard;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { useCallback } from \"react\";\nimport DrawableCanvas, { clearTrigger, undoTrigger } from \"../../components/DrawableCanvas/DrawableCanvas\";\nimport Palette from \"./Palette/Palette\";\nimport { useRoomContext } from \"../../lib/RoomService/context\";\nimport { DEFAULT_STROKE_STYLE, Stroke, StrokeStyle } from \"../../lib/Stroke\";\nimport ToolBoard from \"./ToolBoard/ToolBoard\";\nimport CommandBoard from \"./CommandBoard/CommandBoard\";\nimport cls from \"./PaintBoard.module.scss\";\nimport clsx from \"clsx\";\n\ntype Props = {\n  className?: string;\n};\n\nconst PaintBoard = function ({ className }: Props) {\n  const { roomState, sendStroke, sendClear } = useRoomContext();\n  const [strokeStyle, setStrokeStyle] = useState<StrokeStyle>(DEFAULT_STROKE_STYLE);\n\n  const onStroke = useCallback(\n    (stroke: Stroke) => {\n      sendStroke({ command: \"draw\", stroke });\n    },\n    [sendStroke]\n  );\n\n  const onCommand = (command: string) => {\n    switch (command) {\n      case \"undo\":\n        undoTrigger();\n        break;\n      case \"clear\":\n        clearTrigger();\n        break;\n    }\n  };\n\n  const onUndo = useCallback(() => {\n    sendStroke({ command: \"undo\" });\n  }, [sendStroke]);\n\n  const onClear = useCallback(() => {\n    sendClear();\n  }, [sendClear]);\n\n  const myData = roomState.users.find((user) => user.id === roomState.id);\n  return (\n    <div className={clsx(className, cls.paintBoard)}>\n      <DrawableCanvas\n        width={640}\n        height={480}\n        strokeStyle={strokeStyle}\n        initialStrokeList={myData ? myData.strokeList : []}\n        onStroke={onStroke}\n        onUndo={onUndo}\n        onClear={onClear}\n      />\n      <div className={cls.tools}>\n        <Palette changePalette={(p) => setStrokeStyle(p)} />\n        <CommandBoard onCommand={onCommand} />\n        <ToolBoard />\n      </div>\n    </div>\n  );\n};\n\nexport default PaintBoard;\n","/** @format */\n\nimport { faBed, faEyeSlash, faFileSignature, faUserSlash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport clsx from \"clsx\";\nimport React, { useEffect, useRef } from \"react\";\nimport { Stroke } from \"../../lib/Stroke\";\nimport FixedCanvas from \"../FixedCanvas/FixedCanvas\";\nimport cls from \"./RemoteCanvas.module.scss\";\n\ntype Props = {\n  userName: string;\n  strokeList: Stroke[];\n  width: number;\n  height: number;\n  visible: boolean;\n  connected: boolean;\n  eyeClosed: boolean;\n  grayout: boolean;\n  className?: string;\n};\n\n/**\n * 他ユーザの内容を表示する Canvas\n */\nconst RemoteCanvas = function ({\n  userName,\n  strokeList,\n  width,\n  height,\n  visible,\n  connected,\n  eyeClosed,\n  grayout,\n  className,\n}: Props) {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  useEffect(() => {\n    if (canvasRef.current) {\n      const canvas: HTMLCanvasElement = canvasRef.current;\n      const context = canvas.getContext(\"2d\");\n      if (context) {\n        context.fillStyle = \"#ffffff\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n\n        if (visible) {\n          strokeList.forEach((stroke) => {\n            if (!stroke) {\n              return;\n            }\n            context.strokeStyle = stroke.style.color.code;\n            context.lineJoin = \"round\";\n            context.lineWidth = stroke.style.brush.width;\n\n            for (let i = 1; i < stroke.path.length; i++) {\n              context.beginPath();\n              context.moveTo(stroke.path[i - 1].x, stroke.path[i - 1].y);\n              context.lineTo(stroke.path[i].x, stroke.path[i].y);\n              context.closePath();\n              context.stroke();\n            }\n          });\n        }\n      }\n    }\n  });\n\n  return (\n    <div className={clsx(cls.container, className)}>\n      <FixedCanvas width={width} height={height} ref={canvasRef} className={cls.canvas} />\n      <div className={cls.userName}>{userName}</div>\n      {!connected ? (\n        <div className={clsx(cls.overlay, cls.overlayActive, cls.disconnected)}>\n          <FontAwesomeIcon icon={faUserSlash} />\n        </div>\n      ) : !visible ? (\n        <div className={clsx(cls.overlay, cls.overlayActive, cls.hide)}>\n          <FontAwesomeIcon icon={faEyeSlash} />\n        </div>\n      ) : eyeClosed ? (\n        <div className={clsx(cls.overlay, cls.overlayActive, cls.eyeClosed)}>\n          <FontAwesomeIcon icon={faBed} />\n        </div>\n      ) : grayout ? (\n        <div className={clsx(cls.overlay, cls.overlayActive, cls.grayout)}>\n          <FontAwesomeIcon icon={faFileSignature} />\n        </div>\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default RemoteCanvas;\n","/** @format */\n\nimport React from \"react\";\nimport cls from \"./FancyButton.module.scss\";\n\ntype Props = {\n  children: React.ReactNode;\n  onClick: () => void;\n};\n\n/**\n * ルーム作成などのちょっと大きいボタン\n */\nconst FancyButton = ({ children, onClick }: Props) => {\n  return (\n    <button className={cls.button} onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n\nexport default FancyButton;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport CenteredContainer from \"../CenteredContainer/CenteredContainer\";\nimport FancyButton from \"../FancyButton/FancyButton\";\n\ntype Props = {\n  onJoinButtonClicked: (nickname: string) => void;\n};\n\n/**\n * ルーム入室画面\n */\nconst RoomJoin = function ({ onJoinButtonClicked }: Props) {\n  const [nickname, setNickname] = useState(\"\");\n  const onClick = () => {\n    if (nickname.length > 0) {\n      onJoinButtonClicked(nickname);\n    }\n  };\n\n  return (\n    <CenteredContainer>\n      <p>ニックネームを入力してルームに参加しましょう</p>\n      <div>\n        <input type=\"text\" placeholder=\"ニックネーム\" onChange={(e) => setNickname(e.target.value)} />\n      </div>\n      <div>\n        <FancyButton onClick={onClick}>ルームに参加する</FancyButton>\n      </div>\n    </CenteredContainer>\n  );\n};\n\nexport default RoomJoin;\n","/** @format */\n\nimport { useMutableCallback } from \"../../hooks/useMutableCallback\";\nimport { parseStrokeCommand, stringifyStrokeCommand, StrokeCommand } from \"../Stroke\";\nimport { BroadcastPayload, RoomId, UserID } from \"./message\";\nimport { AppConn, RoomStateDispatcher } from \"./RoomService\";\n\nexport const useBroadcast = (conn: AppConn, roomId: RoomId, { roomState, setRoomState }: RoomStateDispatcher) => {\n  /**\n   * ワンストロークを送信します\n   */\n  const sendStroke = (strokeCommand: StrokeCommand) => {\n    // TODO: バッファリング必要？\n    const data: BroadcastPayload = {\n      type: \"draw\",\n      roomId,\n      data: {\n        id: roomState.id,\n        strokeCommand: stringifyStrokeCommand(strokeCommand),\n      },\n    };\n    conn.sendCommand(\"broadcast\", data);\n  };\n\n  /**\n   * キャンバスクリアを送信します\n   */\n  const sendClear = () => {\n    const data: BroadcastPayload = {\n      type: \"clear\",\n      roomId,\n      data: {\n        id: roomState.id,\n      },\n    };\n    conn.sendCommand(\"broadcast\", data);\n  };\n\n  /**\n   * キャンバスの表示状態変更を送信します\n   */\n  const sendChangeVisibility = (visible: boolean) => {\n    const data: BroadcastPayload = {\n      type: \"changeVisibility\",\n      roomId,\n      data: {\n        id: roomState.id,\n        visible,\n      },\n    };\n    conn.sendCommand(\"broadcast\", data);\n  };\n\n  /**\n   * ほかユーザのボード表示状態変更を送信します\n   */\n  const sendChangeEyeClosed = (eyeClosed: boolean) => {\n    const data: BroadcastPayload = {\n      type: \"changeEyeClosed\",\n      roomId,\n      data: {\n        id: roomState.id,\n        eyeClosed,\n      },\n    };\n    conn.sendCommand(\"broadcast\", data);\n\n    // 自分の状態を更新\n    const user = roomState.users.find((u) => u.id === roomState.id);\n    if (user) {\n      const rest = roomState.users.filter((u) => u.id !== roomState.id);\n      setRoomState({ ...roomState, users: [...rest, { ...user, eyeClosed }] });\n    }\n  };\n\n  /**\n   * ワンストロークを受信したときのコールバック\n   */\n  const recvDraw = useMutableCallback((id: UserID, stroke: string) => {\n    const user = roomState.users.find((u) => u.id === id);\n    if (user) {\n      const rest = roomState.users.filter((u) => u.id !== id);\n      const strokeCommand = parseStrokeCommand(stroke);\n      if (strokeCommand.command === \"draw\") {\n        user.strokeList.push(strokeCommand.stroke);\n      } else {\n        user.strokeList.pop();\n      }\n      setRoomState({ ...roomState, users: [...rest, { ...user, strokeList: user.strokeList }] });\n    }\n  });\n\n  /**\n   * キャンバスクリアを受信したときのコールバック\n   */\n  const recvClear = useMutableCallback((id: UserID) => {\n    const user = roomState.users.find((u) => u.id === id);\n    if (user) {\n      const rest = roomState.users.filter((u) => u.id !== id);\n      setRoomState({ ...roomState, users: [...rest, { ...user, strokeList: [] }] });\n    }\n  });\n\n  /**\n   * キャンバスの表示状態変更を受信したときのコールバック\n   */\n  const recvChangeVisibility = useMutableCallback((id: UserID, visible: boolean) => {\n    const user = roomState.users.find((u) => u.id === id);\n    if (user) {\n      const rest = roomState.users.filter((u) => u.id !== id);\n      setRoomState({ ...roomState, users: [...rest, { ...user, visible }] });\n    }\n  });\n\n  /**\n   * ほかユーザのボード表示状態変更を受信したときのコールバック\n   */\n  const recvChangeEyeClosed = useMutableCallback((id: UserID, eyeClosed: boolean) => {\n    const user = roomState.users.find((u) => u.id === id);\n    if (user) {\n      const rest = roomState.users.filter((u) => u.id !== id);\n      setRoomState({ ...roomState, users: [...rest, { ...user, eyeClosed }] });\n    }\n  });\n\n  /**\n   * ブロードキャストメッセージを受信したときのコールバック\n   */\n  const recvBroadcastMessage = (payload: BroadcastPayload) => {\n    switch (payload.type) {\n      case \"draw\":\n        recvDraw(payload.data.id, payload.data.strokeCommand);\n        break;\n      case \"clear\":\n        recvClear(payload.data.id);\n        break;\n      case \"changeVisibility\":\n        recvChangeVisibility(payload.data.id, payload.data.visible);\n        break;\n      case \"changeEyeClosed\":\n        recvChangeEyeClosed(payload.data.id, payload.data.eyeClosed);\n        break;\n    }\n  };\n\n  return {\n    sendStroke,\n    sendClear,\n    sendChangeVisibility,\n    sendChangeEyeClosed,\n    recvBroadcastMessage,\n  };\n};\n","/** @format */\r\n\r\nimport React, { MutableRefObject, useEffect, useRef, useState } from \"react\";\r\nimport Sockette from \"sockette\";\r\nimport { parseStrokeCommand, StrokeCommand, strokeCommandToStrokeList } from \"../Stroke\";\r\nimport { newConnection } from \"./connection\";\r\nimport { CommandType, Message, RawUserData, Role, RoomId, UserData, UserID } from \"./message\";\r\nimport { useBroadcast } from \"./useBroadcast\";\r\nimport { useCreateRoom } from \"./useCreateRoom\";\r\nimport { useJoinRoom } from \"./useJoinRoom\";\r\n\r\nexport type RoomServiceResponse = {\r\n  connected: boolean;\r\n  error: string | undefined;\r\n  roomState: RoomState;\r\n  createRoom: (nickname: string) => Promise<RoomId>;\r\n  joinRoom: (nickname: string) => Promise<RoomId>;\r\n  sendStroke: (strokeCommand: StrokeCommand) => void;\r\n  sendClear: () => void;\r\n  sendChangeVisibility: (visible: boolean) => void;\r\n  sendChangeEyeClosed: (eyeClosed: boolean) => void;\r\n};\r\n\r\nexport type RoomState = {\r\n  id: UserID;\r\n  roomJoined: boolean;\r\n  role: Role;\r\n  users: UserData[];\r\n};\r\n\r\nexport type RoomStateDispatcher = {\r\n  roomState: RoomState;\r\n  setRoomState: React.Dispatch<React.SetStateAction<RoomState>>;\r\n};\r\n\r\nexport class AppConn {\r\n  constructor(private readonly socketteRef: MutableRefObject<Sockette | undefined>) {}\r\n\r\n  public sendCommand(commandType: CommandType, payload: any): void {\r\n    if (this.socketteRef.current) {\r\n      this.socketteRef.current.json({ message: commandType, payload });\r\n    }\r\n  }\r\n}\r\n\r\nexport const useRoomService = (roomId: RoomId): RoomServiceResponse => {\r\n  const [roomState, setRoomState] = useState<RoomState>({\r\n    id: \"\",\r\n    roomJoined: false,\r\n    role: \"user\",\r\n    users: [],\r\n  });\r\n  const conn = useRef<Sockette>();\r\n  const appConn = new AppConn(conn);\r\n  const [connected, setConnected] = useState(false);\r\n  const [error, setError] = useState<string>();\r\n\r\n  const deps = { roomState, setRoomState };\r\n  const { createRoom, recvRoomCreated, recvRoomAlreadyUsed } = useCreateRoom(appConn, roomId, deps);\r\n  const { joinRoom, recvRoomJoined, recvNicknameAlreadyUsed, recvRoomNotFound, recvUserJoined, recvUserDisconnected } =\r\n    useJoinRoom(appConn, roomId, deps);\r\n  const { sendStroke, sendClear, sendChangeVisibility, sendChangeEyeClosed, recvBroadcastMessage } = useBroadcast(\r\n    appConn,\r\n    roomId,\r\n    deps\r\n  );\r\n\r\n  // console.log(\"DEBUG: Update useRoomService\");\r\n\r\n  const onReceiveMessage = (message: Message) => {\r\n    switch (message.message) {\r\n      case \"roomCreated\":\r\n        recvRoomCreated(message.payload);\r\n        break;\r\n      case \"roomAlreadyUsed\":\r\n        recvRoomAlreadyUsed(message.payload);\r\n        break;\r\n      case \"roomJoined\":\r\n        recvRoomJoined(message.payload);\r\n        break;\r\n      case \"nicknameAlreadyUsed\":\r\n        recvNicknameAlreadyUsed(message.payload);\r\n        break;\r\n      case \"roomNotFound\":\r\n        recvRoomNotFound(message.payload);\r\n        break;\r\n      case \"userJoined\":\r\n        recvUserJoined(message.payload);\r\n        break;\r\n      case \"userDisconnected\":\r\n        recvUserDisconnected(message.payload);\r\n        break;\r\n      case \"broadcast\":\r\n        recvBroadcastMessage(message.payload);\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const sockette = newConnection(\r\n      roomId,\r\n      onReceiveMessage,\r\n      (e) => {\r\n        setConnected(true);\r\n        conn.current = sockette;\r\n      },\r\n      (e) => {\r\n        setConnected(false);\r\n        conn.current = undefined;\r\n      },\r\n      (e) => {\r\n        setConnected(false);\r\n        setError(e);\r\n        console.error(e);\r\n      }\r\n    );\r\n\r\n    // console.log(\"RoomService initialized!!!\");\r\n\r\n    return () => {\r\n      if (conn.current) {\r\n        conn.current.close();\r\n        conn.current = undefined;\r\n      }\r\n      setRoomState({\r\n        roomJoined: false,\r\n        id: \"\",\r\n        role: \"user\",\r\n        users: [],\r\n      });\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return {\r\n    connected,\r\n    error,\r\n    roomState,\r\n    createRoom,\r\n    joinRoom,\r\n    sendStroke,\r\n    sendClear,\r\n    sendChangeVisibility,\r\n    sendChangeEyeClosed,\r\n  };\r\n};\r\n\r\n/**\r\n * サーバから送られてきた DB データを UserData に変換する\r\n */\r\nexport function convertRawUserDataToUserData(rawUserData: RawUserData[]): UserData[] {\r\n  return rawUserData.map((data) => {\r\n    return {\r\n      id: data.id,\r\n      nickname: data.nickname,\r\n      role: data.role,\r\n      strokeList: strokeCommandToStrokeList(data.strokeList.map((stroke) => parseStrokeCommand(stroke))),\r\n      visible: data.visible,\r\n      eyeClosed: data.eyeClosed,\r\n      connected: data.connected,\r\n    };\r\n  });\r\n}\r\n","/** @format */\n\nimport { useRef } from \"react\";\nimport { RoomAlreadyUsedPayload, RoomCreatedPayload, RoomId } from \"./message\";\nimport { AppConn, convertRawUserDataToUserData, RoomStateDispatcher } from \"./RoomService\";\n\nexport const useCreateRoom = (conn: AppConn, roomId: RoomId, { roomState, setRoomState }: RoomStateDispatcher) => {\n  const promiseRef = useRef<any>();\n\n  /**\n   * ルームを新しく作成して参加します\n   */\n  const createRoom = (nickname: string): Promise<RoomId> => {\n    conn.sendCommand(\"createRoom\", { roomId, nickname });\n    return new Promise((resolve, reject) => {\n      promiseRef.current = { resolve, reject };\n    });\n  };\n\n  /**\n   * ルーム作成が成功したときのコールバック\n   */\n  const recvRoomCreated = ({ id, users }: RoomCreatedPayload) => {\n    setRoomState({\n      ...roomState,\n      id,\n      role: \"owner\",\n      users: convertRawUserDataToUserData(users),\n      roomJoined: true,\n    });\n    if (promiseRef.current) {\n      const { resolve } = promiseRef.current;\n      resolve(roomId);\n    }\n  };\n\n  /**\n   * ルーム作成が失敗したときのコールバック\n   */\n  const recvRoomAlreadyUsed = (payload: RoomAlreadyUsedPayload) => {\n    if (promiseRef.current) {\n      const { reject } = promiseRef.current;\n      reject(\"roomAlreadyUsed\");\n    }\n  };\n\n  return { createRoom, recvRoomCreated, recvRoomAlreadyUsed };\n};\n","/** @format */\n\nimport { useRef } from \"react\";\nimport { useMutableCallback } from \"../../hooks/useMutableCallback\";\nimport { RoomId, RoomJoinedPayload, RoomNotFoundPayload, UserDisconnectedPayload, UserJoinedPayload } from \"./message\";\nimport { AppConn, convertRawUserDataToUserData, RoomStateDispatcher } from \"./RoomService\";\n\nexport const useJoinRoom = (conn: AppConn, roomId: RoomId, { roomState, setRoomState }: RoomStateDispatcher) => {\n  const promiseRef = useRef<any>();\n\n  /**\n   * 指定したニックネームでルームに入室する\n   */\n  const joinRoom = (nickname: string): Promise<RoomId> => {\n    conn.sendCommand(\"joinRoom\", { roomId, nickname });\n    return new Promise((resolve, reject) => {\n      promiseRef.current = { resolve, reject };\n    });\n  };\n\n  /**\n   * ルームに入室成功したときのコールバック\n   */\n  const recvRoomJoined = ({ id, users }: RoomJoinedPayload) => {\n    if (promiseRef.current) {\n      const { resolve, reject } = promiseRef.current;\n      const user = users.find((user: any) => user.id === id);\n      if (user) {\n        setRoomState({\n          id: user.id,\n          roomJoined: true,\n          role: user.role,\n          users: convertRawUserDataToUserData(users),\n        });\n        resolve(roomId);\n      } else {\n        // TODO: エラーハンドリング\n        reject(\"ERROR: roomJoined\");\n      }\n    }\n  };\n\n  /**\n   * 名前が被っていたときのコールバック\n   */\n  const recvNicknameAlreadyUsed = (payload: RoomNotFoundPayload) => {\n    if (promiseRef.current) {\n      const { reject } = promiseRef.current;\n      reject(\"nicknameAlreadyUsed\");\n    }\n  };\n\n  /**\n   * ルームが見つからなかったときのコールバック\n   */\n  const recvRoomNotFound = (payload: RoomNotFoundPayload) => {\n    if (promiseRef.current) {\n      const { reject } = promiseRef.current;\n      reject(\"roomNotFound\");\n    }\n  };\n\n  /**\n   * 他のユーザがルームに参加したときのコールバック\n   */\n  const recvUserJoined = useMutableCallback(({ user }: UserJoinedPayload) => {\n    const rest = roomState.users.filter((u) => u.id !== user.id);\n    const userData = convertRawUserDataToUserData([user])[0];\n    setRoomState({ ...roomState, users: [...rest, { ...userData, connected: true }] });\n  });\n\n  /**\n   * 他のユーザがルームを退室したときのコールバック\n   */\n  const recvUserDisconnected = useMutableCallback(({ id }: UserDisconnectedPayload) => {\n    const user = roomState.users.find((u) => u.id === id);\n    if (user) {\n      const rest = roomState.users.filter((u) => u.id !== id);\n      setRoomState({ ...roomState, users: [...rest, { ...user, connected: false }] });\n    }\n  });\n\n  return { joinRoom, recvRoomJoined, recvNicknameAlreadyUsed, recvRoomNotFound, recvUserJoined, recvUserDisconnected };\n};\n","/** @format */\n\nimport Sockette from \"sockette\";\nimport { WS_API_URL, WS_MAX_ATTEMPTS, WS_TIMEOUT } from \"../../config\";\nimport { Message } from \"./message\";\n\n/**\n * WebSocket コネクションを作成して返します\n */\nexport function newConnection(\n  roomId: string,\n  onReceiveMessage: (e: Message) => void,\n  onOpen: (e: any) => void,\n  onClose: (e: any) => void,\n  onError: (e: any) => void\n): Sockette {\n  return new Sockette(`${WS_API_URL}?roomId=${roomId}`, {\n    timeout: WS_TIMEOUT,\n    maxAttempts: WS_MAX_ATTEMPTS,\n    onmessage: (e: any) => {\n      onReceiveMessage(JSON.parse(e.data));\n    },\n    onopen: (e) => onOpen(e),\n    onclose: (e: any) => onClose(e),\n    onerror: (e: any) => onError(e),\n  });\n}\n","/** @format */\n\nexport const WS_API_URL =\n  process.env.NODE_ENV === \"production\"\n    ? \"wss://3az66tmwr4.execute-api.us-east-2.amazonaws.com/dev\"\n    : \"ws://localhost:3001\";\nexport const WS_TIMEOUT = 5e3;\nexport const WS_MAX_ATTEMPTS = 3;\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport { StaticContext, Redirect } from \"react-router\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport RoomHeader from \"../../components/RoomHeader/RoomHeader\";\nimport CenteredContainer from \"../../components/CenteredContainer/CenteredContainer\";\nimport PaintBoard from \"../../components/PaintBoard/PaintBoard\";\nimport RemoteCanvas from \"../../components/RemoteCanvas/RemoteCanvas\";\nimport RoomJoin from \"../../components/RoomJoin/RoomJoin\";\nimport { RoomContextProvider } from \"../../lib/RoomService/context\";\nimport { useRoomService } from \"../../lib/RoomService/RoomService\";\nimport cls from \"./Room.module.scss\";\nimport clsx from \"clsx\";\n\ntype PathParams = { roomId: string };\ntype LocationState = { mode: \"createRoom\" | undefined };\ntype Props = RouteComponentProps<PathParams, StaticContext, LocationState>;\n\n/**\n * ルームページ\n */\nconst Room = ({ match, location }: Props) => {\n  const roomId = match.params.roomId;\n  const [cookies, setCookie] = useCookies([\"nickname\"]);\n  const [nicknameInput, setNicknameInput] = useState<string | undefined>(cookies.nickname);\n  const [columnMode, setColumnMode] = useState<\"draw\" | \"th\" | \"th-large\">(\"draw\");\n  const [errorMessage, setErrorMessage] = useState<string>();\n  const roomService = useRoomService(roomId);\n  const {\n    connected,\n    error,\n    roomState: { id, roomJoined, users },\n    createRoom,\n    joinRoom,\n  } = roomService;\n\n  useEffect(() => {\n    if (!connected || !nicknameInput || roomJoined) {\n      return;\n    }\n\n    (async () => {\n      try {\n        if (location.state && location.state.mode === \"createRoom\") {\n          await createRoom(nicknameInput);\n        } else {\n          await joinRoom(nicknameInput);\n        }\n      } catch (e) {\n        if (e === \"roomAlreadyUsed\") {\n          setErrorMessage(\"ルームを作成できませんでした\");\n        } else if (e === \"roomNotFound\") {\n          setErrorMessage(\"ルームが見つかりませんでした\");\n        } else {\n          console.error(e);\n          setErrorMessage(\"不明なエラーが発生しました\");\n        }\n      }\n    })();\n  }, [location, connected, nicknameInput, roomJoined, createRoom, joinRoom, setErrorMessage]);\n\n  if (!roomId) {\n    return <Redirect to=\"/\" />;\n  }\n\n  if (error) {\n    return (\n      <CenteredContainer>\n        <p>{error}</p>\n      </CenteredContainer>\n    );\n  }\n\n  if (errorMessage) {\n    return (\n      <CenteredContainer>\n        <p>{errorMessage}</p>\n      </CenteredContainer>\n    );\n  }\n\n  if (!nicknameInput) {\n    const onJoinButtonClicked = (nickname: string) => {\n      setNicknameInput(nickname);\n      setCookie(\"nickname\", nickname);\n    };\n    return <RoomJoin onJoinButtonClicked={onJoinButtonClicked} />;\n  }\n\n  if (!roomJoined) {\n    return <div className=\"notify-message\">ルームを読み込み中…</div>;\n  }\n\n  const myData = users.find((user) => user.id === id);\n  const others = users.filter((user) => user.id !== id);\n\n  // 表示状態に応じてキャンバスサイズを調整\n  const remoteCanvasScale = columnMode === \"draw\" ? 0.5 : columnMode === \"th-large\" ? 0.875 : 0.625;\n  const remoteCanvasWidth = 640 * remoteCanvasScale;\n  const remoteCanvasHeight = 480 * remoteCanvasScale;\n  const paintBoardWrapperClassName =\n    columnMode === \"draw\" ? cls.pb_draw : columnMode === \"th-large\" ? cls.pb_ThLarge : cls.pb_Th;\n\n  const eyeClosed = myData ? myData.eyeClosed : false;\n\n  return (\n    <RoomContextProvider value={roomService}>\n      <RoomHeader roomId={roomId} setColumnMode={setColumnMode} />\n      <main className={cls.canvasAlignment}>\n        <div className={clsx(cls.paintBoardWrapper, paintBoardWrapperClassName)}>\n          <PaintBoard className={cls.paintBoard} />\n        </div>\n        {others.map((user) => (\n          <div\n            key={user.nickname}\n            className={cls.remoteCanvas}\n            style={{ width: remoteCanvasWidth, height: remoteCanvasHeight }}\n          >\n            <RemoteCanvas\n              key={user.nickname}\n              userName={user.nickname}\n              strokeList={user.strokeList}\n              width={remoteCanvasWidth}\n              height={remoteCanvasHeight}\n              visible={user.visible}\n              eyeClosed={user.eyeClosed}\n              grayout={eyeClosed}\n              connected={user.connected}\n            />\n          </div>\n        ))}\n      </main>\n    </RoomContextProvider>\n  );\n};\n\nexport default Room;\n","/** @format */\n\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport TopPage from \"./page/TopPage/TopPage\";\nimport Room from \"./page/Room/Room\";\n\nconst PathDefs = {\n  top: \"/\",\n  room: \"/room/:roomId\",\n};\n\nconst routes = () => {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path={PathDefs.top} component={TopPage} />\n        <Route exact path={PathDefs.room} component={Room} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default routes;\n","/** @format */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport AppRouter from \"./router\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppRouter />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}